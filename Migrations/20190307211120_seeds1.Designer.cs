// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TopicalFruitKnockoff.Models;

namespace TopicalFruitKnockoff.Migrations
{
    [DbContext(typeof(FrootsContext))]
    [Migration("20190307211120_seeds1")]
    partial class seeds1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TopicalFruitKnockoff.Models.Catagory", b =>
                {
                    b.Property<int>("CatagoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Desctiption");

                    b.Property<string>("ImgUrl");

                    b.Property<string>("Name");

                    b.HasKey("CatagoryId");

                    b.ToTable("Catagories");

                    b.HasData(
                        new { CatagoryId = 1, Active = true, Desctiption = "", ImgUrl = "wwwroot/images/Featured.PNG", Name = "Featured Products" },
                        new { CatagoryId = 2, Active = false, Desctiption = "All smoothies are 24 oz. and made with turbinado unless otherwise noted or requested. Splenda substitute available.", ImgUrl = "wwwroot/images/Classic.PNG", Name = "Classic Smoothies" }
                    );
                });

            modelBuilder.Entity("TopicalFruitKnockoff.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CatagoryId");

                    b.Property<string>("Description");

                    b.Property<string>("ImgUrl");

                    b.Property<string>("Name");

                    b.Property<int?>("OrderId");

                    b.Property<double>("Price");

                    b.HasKey("ItemId");

                    b.HasIndex("CatagoryId");

                    b.HasIndex("OrderId");

                    b.ToTable("Items");

                    b.HasData(
                        new { ItemId = 1, CatagoryId = 1, Description = "unsweetened vanilla almond milk, mango, pineapple & turmeric", ImgUrl = "https://olo-images-live.imgix.net/bf/bfd6170e52ec44259f5745202c350e09.png?auto=format%2Ccompress&q=60&cs=tinysrgb&w=170&h=113&fit=crop&s=2af6f386acd3bbd2b1cc5d1b4a47aebc", Name = "Mango Tumeric", Price = 5.29 },
                        new { ItemId = 2, CatagoryId = 1, Description = "unsweetened vanilla almond milk, strawberries, cinnamon & topped with granola", ImgUrl = "https://olo-images-live.imgix.net/fc/fcc5c1cb95a34a6a9feb446c48099e48.png?auto=format%2Ccompress&q=60&cs=tinysrgb&w=170&h=113&fit=crop&s=0a8b0e6c1abe042d19719a48067d02b1", Name = "Strawberry Granola", Price = 5.29 },
                        new { ItemId = 3, CatagoryId = 2, Description = "strawberries, pineapple, white chocolate & coconut (500 cal)", ImgUrl = "https://olo-images-live.imgix.net/fb/fb690aae84b64c148317ac7809183f4b.png?auto=format%2Ccompress&q=60&cs=tinysrgb&w=170&h=113&fit=crop&s=d67aa2c28779fdc6858aef8d8f410eb2", Name = "Bahama Mama", Price = 5.99 },
                        new { ItemId = 4, CatagoryId = 2, Description = "strawberries, banana & chocolate (550 cal)", ImgUrl = "https://olo-images-live.imgix.net/65/65ab2c0b569340f29f5a3da024823e4a.png?auto=format%2Ccompress&q=60&cs=tinysrgb&w=170&h=113&fit=crop&s=445c97f5c2d6193d0ce16265b3ffbac1", Name = "Beach Bum", Price = 5.99 },
                        new { ItemId = 5, CatagoryId = 2, Description = "strawberries, pineapple, orange juice & lime (440 cal)", ImgUrl = "https://olo-images-live.imgix.net/01/01d5829cb85c478ca1a15b6ac883e27b.png?auto=format%2Ccompress&q=60&cs=tinysrgb&w=170&h=113&fit=crop&s=f46625f9b3039d2c777ae878a8112011", Name = "Blimey Limey", Price = 5.99 },
                        new { ItemId = 6, CatagoryId = 2, Description = "blueberries, strawberries & banana (340 cal)", ImgUrl = "https://olo-images-live.imgix.net/a4/a40d91f6251b4b40a86924fc08923f82.png?auto=format%2Ccompress&q=60&cs=tinysrgb&w=170&h=113&fit=crop&s=5104934fc1165c67f015302827dcc56d", Name = "Blueberry Bliss", Price = 5.99 },
                        new { ItemId = 7, CatagoryId = 2, Description = "strawberries & banana (370 cal)", ImgUrl = "https://olo-images-live.imgix.net/36/36dd4be35fab41b8ae9d152a40744354.png?auto=format%2Ccompress&q=60&cs=tinysrgb&w=170&h=113&fit=crop&s=4800891004b7bad0e7eb85792b74da13", Name = "Jerry Punch", Price = 5.99 },
                        new { ItemId = 8, CatagoryId = 2, Description = "kiwi, strawberries & non-fat yogurt (450 cal)", ImgUrl = "https://olo-images-live.imgix.net/82/82625c4eadf849c9b0540370fdb98000.png?auto=format%2Ccompress&q=60&cs=tinysrgb&w=170&h=113&fit=crop&s=84efefe5c7957d8853edd86a6669c968", Name = "Kiwi Quencher", Price = 5.99 },
                        new { ItemId = 9, CatagoryId = 2, Description = "mango, pineapple & non-fat yogurt (400 cal)", ImgUrl = "https://olo-images-live.imgix.net/2d/2d7b7393d6d04ae983368fe531f933e2.png?auto=format%2Ccompress&q=60&cs=tinysrgb&w=170&h=113&fit=crop&s=84c7698fe93f22790790cb8d4419c3ab", Name = "Mango Magic", Price = 5.99 },
                        new { ItemId = 10, CatagoryId = 2, Description = "cholocate, coffee, cappuccino & non-fat yogurt (available in decaf) (660 cal)", ImgUrl = "https://olo-images-live.imgix.net/6b/6b65403c1fd14c0fb1f71540b3be40f3.png?auto=format%2Ccompress&q=60&cs=tinysrgb&w=170&h=113&fit=crop&s=3aa4b2b1c6d1324fec82bcd1c28d3758", Name = "Mocha Madness", Price = 5.99 },
                        new { ItemId = 11, CatagoryId = 2, Description = "strawberries, banana & pineapple (430 cal)", ImgUrl = "https://olo-images-live.imgix.net/3c/3cdb5fad022041ddb07581682d1c2ea5.png?auto=format%2Ccompress&q=60&cs=tinysrgb&w=170&h=113&fit=crop&s=318a6a03002d930cfe0452caa2809bff", Name = "Paradise Point", Price = 5.99 },
                        new { ItemId = 12, CatagoryId = 2, Description = "peaches, strawberries & banana (360 cal)", ImgUrl = "https://olo-images-live.imgix.net/c7/c7117a873686420695ebead4ab1e07cc.png?auto=format%2Ccompress&q=60&cs=tinysrgb&w=170&h=113&fit=crop&s=d41e797ad0e0f38e9b53d5ee71b8c418", Name = "Peaches 'N Silk", Price = 5.99 },
                        new { ItemId = 13, CatagoryId = 2, Description = "peanut butter, banana & chocolate (710 cal)", ImgUrl = "https://olo-images-live.imgix.net/23/2356a719f82b4add9261d3feb980a5b2.png?auto=format%2Ccompress&q=60&cs=tinysrgb&w=170&h=113&fit=crop&s=acd288ab71b73531b5988ed071ba0f02", Name = "Peanut Butter Cup", Price = 5.99 },
                        new { ItemId = 14, CatagoryId = 2, Description = "strawberries & lime (470 cal)", ImgUrl = "https://olo-images-live.imgix.net/c2/c240162fe4ce4d0588c9296d5972b84c.png?auto=format%2Ccompress&q=60&cs=tinysrgb&w=170&h=113&fit=crop&s=2daddf7dbef2d8c3a1da38c43d315bf7", Name = "Strawberry Limeade", Price = 5.99 },
                        new { ItemId = 15, CatagoryId = 2, Description = "strawberries, pineapple, mango, & orange juice (360 cal)", ImgUrl = "https://olo-images-live.imgix.net/1f/1f191046fa2c4c348cb010097c309067.png?auto=format%2Ccompress&q=60&cs=tinysrgb&w=170&h=113&fit=crop&s=2017ac3dfab75f2fc77acfbcfc361e40", Name = "Sunrise Sunset", Price = 5.99 },
                        new { ItemId = 16, CatagoryId = 2, Description = "mango, banana, orange, pineapple & orange juice (390 cal)", ImgUrl = "https://olo-images-live.imgix.net/36/36cadc17481c4748a1e20719f4eb2bc6.png?auto=format%2Ccompress&q=60&cs=tinysrgb&w=170&h=113&fit=crop&s=db913f5191c70cc66ffbcbd16c4688b5", Name = "Sunshine", Price = 5.99 }
                    );
                });

            modelBuilder.Entity("TopicalFruitKnockoff.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd();

                    b.HasKey("OrderId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("TopicalFruitKnockoff.Models.Item", b =>
                {
                    b.HasOne("TopicalFruitKnockoff.Models.Catagory", "Catagory")
                        .WithMany("Items")
                        .HasForeignKey("CatagoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TopicalFruitKnockoff.Models.Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId");
                });
#pragma warning restore 612, 618
        }
    }
}
